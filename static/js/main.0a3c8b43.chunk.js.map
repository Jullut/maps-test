{"version":3,"sources":["components/Maps/index.js","App.js","reportWebVitals.js","index.js"],"names":["mapStyles","width","height","Maps","props","displayMarkers","state","markers","map","marker","index","id","position","lat","latitude","lng","longitude","onClick","console","log","axios","method","url","markerRes","data","this","setState","setTimeout","google","zoom","style","initialCenter","Component","GoogleApiWrapper","apiKey","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAIMA,EAAY,CACjBC,MAAO,OACPC,OAAQ,QAGHC,E,kDACL,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAOPC,eAAiB,WAChB,OAAO,EAAKC,MAAMC,QAAQC,KAAI,SAACC,EAAQC,GACtC,OACC,cAAC,SAAD,CAECC,GAAID,EACJE,SAAU,CACTC,IAAKJ,EAAOK,SACZC,IAAKN,EAAOO,WAEbC,QAAS,kBAAMC,QAAQC,IAAI,qBANtBT,OATR,EAAKJ,MAAQ,CACZC,QAAS,IAJQ,E,kMAyBMa,IAAM,CAC7BC,OAAQ,MACRC,IAAK,4D,OAFAC,E,OAKAhB,EAAUgB,EAAUC,KAE1BC,KAAKC,SAAS,CAAEnB,Y,iJAGK,IAAD,OACpBoB,YAAW,WACV,EAAKD,SAAS,CACbnB,QAAS,OAER,O,+BAIH,OACC,8BACC,cAAC,MAAD,CACCqB,OAAQH,KAAKrB,MAAMwB,OACnBC,KAAM,EACNC,MAAO9B,EACP+B,cAAe,CAAElB,IAAK,OAAQE,KAAM,SAJrC,SAMEU,KAAKpB,yB,GArDQ2B,aA4DJC,6BAAiB,CAC/BC,OAAQ,2CADMD,CAEZ9B,GC5DYgC,MARf,WACC,OACC,qBAAKC,UAAU,MAAf,SACC,cAAC,EAAD,OCMYC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0a3c8b43.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\nconst mapStyles = {\r\n\twidth: '100%',\r\n\theight: '100%'\r\n};\r\n\r\nclass Maps extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmarkers: []\r\n\t\t};\r\n\t}\r\n\r\n\tdisplayMarkers = () => {\r\n\t\treturn this.state.markers.map((marker, index) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Marker\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tid={index}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tlat: marker.latitude,\r\n\t\t\t\t\t\tlng: marker.longitude\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonClick={() => console.log('You clicked me!')}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst markerRes = await axios({\r\n\t\t\tmethod: 'GET',\r\n\t\t\turl: 'https://protected-scrubland-72018.herokuapp.com/markers'\r\n\t\t});\r\n\r\n\t\tconst markers = markerRes.data;\r\n\r\n\t\tthis.setState({ markers });\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tmarkers: []\r\n\t\t\t});\r\n\t\t}, 3000);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Map\r\n\t\t\t\t\tgoogle={this.props.google}\r\n\t\t\t\t\tzoom={8}\r\n\t\t\t\t\tstyle={mapStyles}\r\n\t\t\t\t\tinitialCenter={{ lat: 47.444, lng: -122.176 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.displayMarkers()}\r\n\t\t\t\t</Map>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n\tapiKey: 'AIzaSyBI3M9rRmBaCYLUGSKAByQDxPZGijpNoGo'\r\n})(Maps);\r\n","import './App.css';\nimport Maps from './components/Maps';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Maps />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}